const TX1 =
  "84a30081825820639b4af1e7bf25edd5d9dfb63ea79827a25e15b2ecf2bc861eeeeead0279108901018282583900e63022b0f461602484968bb10fd8f872787b862ace2d7e943292a37003ec6a12860ef8c07d4c1a8de7df06acb0f0330a6087ecbe972082a71a00766272825839004693c0ac525d045cb0a4e75bd3adbd6956b3b744e88d21e041fc9b630df092006419e469e0c77876a499124bf903735b434c7989f7a8090a1b000000025208a690021a00029075a10081825820e6e75c7876c610afd28a19c2947e72c1a629ab7903283e14915badee7c55402e5840b5d23d73a2c52515862310b08c94d51c6a0ccc2a6d61008d67070317a4dff6e0e41ae62423852007bfa6778162296362c0a1f951ad7634706a1ac6922085b602f5f6";
const TX2 =
  "84a30081825820639b4af1e7bf25edd5d9dfb63ea79827a25e15b2ecf2bc861eeeeead0279108901018282583900f97ccf4fe384174e63f2250a3c4a61f851112ed0b93caeb6aa84308e95d8feca512588e1a954ee5a8ae2beff32ea360590be694b5065d8581a00766272825839004693c0ac525d045cb0a4e75bd3adbd6956b3b744e88d21e041fc9b630df092006419e469e0c77876a499124bf903735b434c7989f7a8090a1b000000025208a690021a00029075a10081825820e6e75c7876c610afd28a19c2947e72c1a629ab7903283e14915badee7c55402e58409cbeb67bc43d81563790eeb7e7c80ab4af569ba062e6cb345fc0049107ca5127533eafab1de2470841ff6c06ad1d630ac0e1de011350635be7d9e5685d1fe803f5f6";

const TX3 =
  "84a30081825820639b4af1e7bf25edd5d9dfb63ea79827a25e15b2ecf2bc861eeeeead02791089010182825839002216b241048f34b97f34147116743df73dd7b0f814f8aacc04c778073e0feebba2d821e249ca4021efc12c2102cc6712c0c2a515add749861a00766272825839004693c0ac525d045cb0a4e75bd3adbd6956b3b744e88d21e041fc9b630df092006419e469e0c77876a499124bf903735b434c7989f7a8090a1b000000025208a690021a00029075a10081825820e6e75c7876c610afd28a19c2947e72c1a629ab7903283e14915badee7c55402e584053c535c66e66da1480522b6a3a722701b8c59b517d2b08bb47306a21a40d274ee33195b8e9a57c0cd91e08154e2f438bcc5ab7257d3ab5833e8d8520459b7d0df5f6";

import { CardanoSubmitClient } from "../src/index.js";

async function test() {
  let submitClient = new CardanoSubmitClient({
    uri: "http://localhost:50051",
  });

  let TXs = [
    Buffer.from(TX1, "hex"),
    Buffer.from(TX2, "hex"),
    Buffer.from(TX3, "hex"),
  ];

  for (const tx of TXs) {
    const res = await submitClient.submitTx(tx);
    console.log(res);
  }
}

test().catch(console.error);
